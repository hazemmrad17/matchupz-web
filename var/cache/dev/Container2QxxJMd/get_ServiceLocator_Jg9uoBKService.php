<?php

namespace Container2QxxJMd;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_Jg9uoBKService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.Jg9uoBK' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.Jg9uoBK'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'clubRepository' => ['privates', 'App\\Repository\\ClubRepository', 'getClubRepositoryService', true],
            'espaceRepository' => ['privates', '.errored.slli7Vh', NULL, 'Cannot determine controller argument for "App\\Controller\\DashboardController::index()": the $espaceRepository argument is type-hinted with the non-existent class or interface: "App\\Repository\\EspaceRepository".'],
            'historiqueClubRepository' => ['privates', 'App\\Repository\\HistoriqueClubRepository', 'getHistoriqueClubRepositoryService', true],
            'joueurRepository' => ['privates', 'App\\Repository\\JoueurRepository', 'getJoueurRepositoryService', true],
            'matchsRepository' => ['privates', '.errored.sIgc_0L', NULL, 'Cannot determine controller argument for "App\\Controller\\DashboardController::index()": the $matchsRepository argument is type-hinted with the non-existent class or interface: "App\\Repository\\MatchsRepository".'],
            'performanceJoueurRepository' => ['privates', 'App\\Repository\\PerformanceJoueurRepository', 'getPerformanceJoueurRepositoryService', true],
            'sportRepository' => ['privates', 'App\\Repository\\SportRepository', 'getSportRepositoryService', true],
        ], [
            'clubRepository' => 'App\\Repository\\ClubRepository',
            'espaceRepository' => '?',
            'historiqueClubRepository' => 'App\\Repository\\HistoriqueClubRepository',
            'joueurRepository' => 'App\\Repository\\JoueurRepository',
            'matchsRepository' => '?',
            'performanceJoueurRepository' => 'App\\Repository\\PerformanceJoueurRepository',
            'sportRepository' => 'App\\Repository\\SportRepository',
        ]);
    }
}
