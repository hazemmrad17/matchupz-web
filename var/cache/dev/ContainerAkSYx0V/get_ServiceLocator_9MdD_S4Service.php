<?php

namespace ContainerAkSYx0V;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_9MdD_S4Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.9MdD.S4' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.9MdD.S4'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'clubRepository' => ['privates', 'App\\Repository\\ClubRepository', 'getClubRepositoryService', true],
            'espaceRepository' => ['privates', 'App\\Repository\\EspacesportifRepository', 'getEspacesportifRepositoryService', true],
            'historiqueRepository' => ['privates', 'App\\Repository\\HistoriqueClubRepository', 'getHistoriqueClubRepositoryService', true],
            'joueurRepository' => ['privates', 'App\\Repository\\JoueurRepository', 'getJoueurRepositoryService', true],
            'matchRepository' => ['privates', 'App\\Repository\\MatchEntityRepository', 'getMatchEntityRepositoryService', true],
            'sponsoringRepository' => ['privates', 'App\\Repository\\SponsorRepository', 'getSponsorRepositoryService', true],
            'userRepository' => ['privates', '.errored.8Am7bY2', NULL, 'Cannot determine controller argument for "App\\Controller\\DashboardController::index()": the $userRepository argument is type-hinted with the non-existent class or interface: "App\\Controller\\UserRepository". Did you forget to add a use statement?'],
        ], [
            'clubRepository' => 'App\\Repository\\ClubRepository',
            'espaceRepository' => 'App\\Repository\\EspacesportifRepository',
            'historiqueRepository' => 'App\\Repository\\HistoriqueClubRepository',
            'joueurRepository' => 'App\\Repository\\JoueurRepository',
            'matchRepository' => 'App\\Repository\\MatchEntityRepository',
            'sponsoringRepository' => 'App\\Repository\\SponsorRepository',
            'userRepository' => '?',
        ]);
    }
}
