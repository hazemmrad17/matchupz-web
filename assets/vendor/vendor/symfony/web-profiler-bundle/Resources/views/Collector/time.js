(function(e, a) { for(var i in a) e[i] = a[i]; }(window, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./vendor/symfony/web-profiler-bundle/Resources/views/Collector/time.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./vendor/symfony/web-profiler-bundle/Resources/views/Collector/time.js":
/*!******************************************************************************!*\
  !*** ./vendor/symfony/web-profiler-bundle/Resources/views/Collector/time.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar TimelineEngine = /*#__PURE__*/function () {\n  /**\n   * @param  {Theme} theme\n   * @param  {Renderer} renderer\n   * @param  {Legend} legend\n   * @param  {Element} threshold\n   * @param  {Object} request\n   * @param  {Number} eventHeight\n   * @param  {Number} horizontalMargin\n   */\n  function TimelineEngine(theme, renderer, legend, threshold, request) {\n    var eventHeight = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 36;\n    var horizontalMargin = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 10;\n\n    _classCallCheck(this, TimelineEngine);\n\n    this.theme = theme;\n    this.renderer = renderer;\n    this.legend = legend;\n    this.threshold = threshold;\n    this.request = request;\n    this.scale = renderer.width / request.end;\n    this.eventHeight = eventHeight;\n    this.horizontalMargin = horizontalMargin;\n    this.labelY = Math.round(this.eventHeight * 0.48);\n    this.periodY = Math.round(this.eventHeight * 0.66);\n    this.FqcnMatcher = /\\\\([^\\\\]+)$/i;\n    this.origin = null;\n    this.createEventElements = this.createEventElements.bind(this);\n    this.createBackground = this.createBackground.bind(this);\n    this.createPeriod = this.createPeriod.bind(this);\n    this.render = this.render.bind(this);\n    this.renderEvent = this.renderEvent.bind(this);\n    this.renderPeriod = this.renderPeriod.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.isActive = this.isActive.bind(this);\n    this.threshold.addEventListener('change', this.render);\n    this.legend.addEventListener('change', this.render);\n    window.addEventListener('resize', this.onResize);\n    this.createElements();\n    this.render();\n  }\n\n  _createClass(TimelineEngine, [{\n    key: \"onResize\",\n    value: function onResize() {\n      this.renderer.measure();\n      this.setScale(this.renderer.width / this.request.end);\n    }\n  }, {\n    key: \"setScale\",\n    value: function setScale(scale) {\n      if (scale !== this.scale) {\n        this.scale = scale;\n        this.render();\n      }\n    }\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      this.origin = this.renderer.setFullVerticalLine(this.createBorder(), 0);\n      this.renderer.add(this.origin);\n      this.request.events.filter(function (event) {\n        return event.category === 'section';\n      }).map(this.createBackground).forEach(this.renderer.add);\n      this.request.events.map(this.createEventElements).forEach(this.renderer.add);\n    }\n  }, {\n    key: \"createBackground\",\n    value: function createBackground(event) {\n      var subrequest = event.name === '__section__.child';\n      var background = this.renderer.create('rect', subrequest ? 'timeline-subrequest' : 'timeline-border');\n      event.elements = Object.assign(event.elements || {}, {\n        background: background\n      });\n      return background;\n    }\n  }, {\n    key: \"createEventElements\",\n    value: function createEventElements(event) {\n      var _this = this;\n\n      var name = event.name,\n          category = event.category,\n          duration = event.duration,\n          memory = event.memory,\n          periods = event.periods;\n      var border = this.renderer.setFullHorizontalLine(this.createBorder(), 0);\n      var lines = periods.map(function (period) {\n        return _this.createPeriod(period, category);\n      });\n      var label = this.createLabel(this.getShortName(name), duration, memory, periods[0]);\n      var title = this.renderer.createTitle(name);\n      var group = this.renderer.group([title, border, label].concat(lines), this.theme.getCategoryColor(event.category));\n      event.elements = Object.assign(event.elements || {}, {\n        group: group,\n        label: label,\n        border: border\n      });\n      this.legend.add(event.category);\n      return group;\n    }\n  }, {\n    key: \"createLabel\",\n    value: function createLabel(name, duration, memory, period) {\n      var label = this.renderer.createText(name, period.start * this.scale, this.labelY, 'timeline-label');\n      var sublabel = this.renderer.createTspan(\"  \".concat(duration, \" ms / \").concat(memory, \" MiB\"), 'timeline-sublabel');\n      label.appendChild(sublabel);\n      return label;\n    }\n  }, {\n    key: \"createPeriod\",\n    value: function createPeriod(period, category) {\n      var timeline = this.renderer.createPath(null, 'timeline-period', this.theme.getCategoryColor(category));\n      period.draw = category === 'section' ? this.renderer.setSectionLine : this.renderer.setPeriodLine;\n      period.elements = Object.assign(period.elements || {}, {\n        timeline: timeline\n      });\n      return timeline;\n    }\n  }, {\n    key: \"createBorder\",\n    value: function createBorder() {\n      return this.renderer.createPath(null, 'timeline-border');\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(event) {\n      var duration = event.duration,\n          category = event.category;\n      return duration >= this.threshold.value && this.legend.isActive(category);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var events = this.request.events.filter(this.isActive);\n      var width = this.renderer.width + this.horizontalMargin * 2;\n      var height = this.eventHeight * events.length; // Set view box\n\n      this.renderer.setViewBox(-this.horizontalMargin, 0, width, height); // Show 0ms origin\n\n      this.renderer.setFullVerticalLine(this.origin, 0); // Render all events\n\n      this.request.events.forEach(function (event) {\n        return _this2.renderEvent(event, events.indexOf(event));\n      });\n    }\n  }, {\n    key: \"renderEvent\",\n    value: function renderEvent(event, index) {\n      var name = event.name,\n          category = event.category,\n          duration = event.duration,\n          memory = event.memory,\n          periods = event.periods,\n          elements = event.elements;\n      var group = elements.group,\n          label = elements.label,\n          border = elements.border,\n          background = elements.background;\n      var visible = index >= 0;\n      group.setAttribute('visibility', visible ? 'visible' : 'hidden');\n\n      if (background) {\n        background.setAttribute('visibility', visible ? 'visible' : 'hidden');\n\n        if (visible) {\n          var _this$getEventLimits = this.getEventLimits(event),\n              _this$getEventLimits2 = _slicedToArray(_this$getEventLimits, 2),\n              min = _this$getEventLimits2[0],\n              max = _this$getEventLimits2[1];\n\n          this.renderer.setFullRectangle(background, min * this.scale, max * this.scale);\n        }\n      }\n\n      if (visible) {\n        // Position the group\n        group.setAttribute('transform', \"translate(0, \".concat(index * this.eventHeight, \")\")); // Update top border\n\n        this.renderer.setFullHorizontalLine(border, 0); // render label and ensure it doesn't escape the viewport\n\n        this.renderLabel(label, event); // Update periods\n\n        periods.forEach(this.renderPeriod);\n      }\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(label, event) {\n      var width = this.getLabelWidth(label);\n\n      var _this$getEventLimits3 = this.getEventLimits(event),\n          _this$getEventLimits4 = _slicedToArray(_this$getEventLimits3, 2),\n          min = _this$getEventLimits4[0],\n          max = _this$getEventLimits4[1];\n\n      var alignLeft = min * this.scale + width <= this.renderer.width;\n      label.setAttribute('x', (alignLeft ? min : max) * this.scale);\n      label.setAttribute('text-anchor', alignLeft ? 'start' : 'end');\n    }\n  }, {\n    key: \"renderPeriod\",\n    value: function renderPeriod(period) {\n      var elements = period.elements,\n          start = period.start,\n          duration = period.duration;\n      period.draw(elements.timeline, start * this.scale, this.periodY, Math.max(duration * this.scale, 1));\n    }\n  }, {\n    key: \"getLabelWidth\",\n    value: function getLabelWidth(label) {\n      if (typeof label.width === 'undefined') {\n        label.width = label.getBBox().width;\n      }\n\n      return label.width;\n    }\n  }, {\n    key: \"getEventLimits\",\n    value: function getEventLimits(event) {\n      if (typeof event.limits === 'undefined') {\n        var periods = event.periods;\n        event.limits = [periods[0].start, periods[periods.length - 1].end];\n      }\n\n      return event.limits;\n    }\n  }, {\n    key: \"getShortName\",\n    value: function getShortName(name) {\n      var matches = this.FqcnMatcher.exec(name);\n\n      if (matches) {\n        return matches[1];\n      }\n\n      return name;\n    }\n  }]);\n\n  return TimelineEngine;\n}();\n\nvar Legend = /*#__PURE__*/function () {\n  function Legend(element, theme) {\n    _classCallCheck(this, Legend);\n\n    this.element = element;\n    this.theme = theme;\n    this.toggle = this.toggle.bind(this);\n    this.createCategory = this.createCategory.bind(this);\n    this.categories = [];\n    this.theme.getDefaultCategories().forEach(this.createCategory);\n  }\n\n  _createClass(Legend, [{\n    key: \"add\",\n    value: function add(category) {\n      this.get(category).classList.add('present');\n    }\n  }, {\n    key: \"createCategory\",\n    value: function createCategory(category) {\n      var element = document.createElement('button');\n      element.className = \"timeline-category active\";\n      element.style.borderColor = this.theme.getCategoryColor(category);\n      element.innerText = category;\n      element.value = category;\n      element.type = 'button';\n      element.addEventListener('click', this.toggle);\n      this.element.appendChild(element);\n      this.categories.push(element);\n      return element;\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(event) {\n      event.target.classList.toggle('active');\n      this.emit('change');\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(category) {\n      return this.get(category).classList.contains('active');\n    }\n  }, {\n    key: \"get\",\n    value: function get(category) {\n      return this.categories.find(function (element) {\n        return element.value === category;\n      }) || this.createCategory(category);\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(name) {\n      this.element.dispatchEvent(new Event(name));\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(name, callback) {\n      this.element.addEventListener(name, callback);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(name, callback) {\n      this.element.removeEventListener(name, callback);\n    }\n  }]);\n\n  return Legend;\n}();\n\nvar SvgRenderer = /*#__PURE__*/function () {\n  /**\n   * @param  {SVGElement} element\n   */\n  function SvgRenderer(element) {\n    _classCallCheck(this, SvgRenderer);\n\n    this.ns = 'http://www.w3.org/2000/svg';\n    this.width = null;\n    this.viewBox = {};\n    this.element = element;\n    this.add = this.add.bind(this);\n    this.setViewBox(0, 0, 0, 0);\n    this.measure();\n  }\n\n  _createClass(SvgRenderer, [{\n    key: \"setViewBox\",\n    value: function setViewBox(x, y, width, height) {\n      this.viewBox = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n      this.element.setAttribute('viewBox', \"\".concat(x, \" \").concat(y, \" \").concat(width, \" \").concat(height));\n    }\n  }, {\n    key: \"measure\",\n    value: function measure() {\n      this.width = this.element.getBoundingClientRect().width;\n    }\n  }, {\n    key: \"add\",\n    value: function add(element) {\n      this.element.appendChild(element);\n    }\n  }, {\n    key: \"group\",\n    value: function group(elements, className) {\n      var group = this.create('g', className);\n      elements.forEach(function (element) {\n        return group.appendChild(element);\n      });\n      return group;\n    }\n  }, {\n    key: \"setHorizontalLine\",\n    value: function setHorizontalLine(element, x, y, width) {\n      element.setAttribute('d', \"M\".concat(x, \",\").concat(y, \" h\").concat(width));\n      return element;\n    }\n  }, {\n    key: \"setVerticalLine\",\n    value: function setVerticalLine(element, x, y, height) {\n      element.setAttribute('d', \"M\".concat(x, \",\").concat(y, \" v\").concat(height));\n      return element;\n    }\n  }, {\n    key: \"setFullHorizontalLine\",\n    value: function setFullHorizontalLine(element, y) {\n      return this.setHorizontalLine(element, this.viewBox.x, y, this.viewBox.width);\n    }\n  }, {\n    key: \"setFullVerticalLine\",\n    value: function setFullVerticalLine(element, x) {\n      return this.setVerticalLine(element, x, this.viewBox.y, this.viewBox.height);\n    }\n  }, {\n    key: \"setFullRectangle\",\n    value: function setFullRectangle(element, min, max) {\n      element.setAttribute('x', min);\n      element.setAttribute('y', this.viewBox.y);\n      element.setAttribute('width', max - min);\n      element.setAttribute('height', this.viewBox.height);\n    }\n  }, {\n    key: \"setSectionLine\",\n    value: function setSectionLine(element, x, y, width) {\n      var height = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 4;\n      var markerSize = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 6;\n      var totalHeight = height + markerSize;\n      var maxMarkerWidth = Math.min(markerSize, width / 2);\n      var widthWithoutMarker = Math.max(0, width - maxMarkerWidth * 2);\n      element.setAttribute('d', \"M\".concat(x, \",\").concat(y + totalHeight, \" v\").concat(-totalHeight, \" h\").concat(width, \" v\").concat(totalHeight, \" l\").concat(-maxMarkerWidth, \" \").concat(-markerSize, \" h\").concat(-widthWithoutMarker, \" Z\"));\n    }\n  }, {\n    key: \"setPeriodLine\",\n    value: function setPeriodLine(element, x, y, width) {\n      var height = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 4;\n      var markerWidth = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 2;\n      var markerHeight = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 4;\n      var totalHeight = height + markerHeight;\n      var maxMarkerWidth = Math.min(markerWidth, width);\n      element.setAttribute('d', \"M\".concat(x + maxMarkerWidth, \",\").concat(y + totalHeight, \" h\").concat(-maxMarkerWidth, \" v\").concat(-totalHeight, \" h\").concat(width, \" v\").concat(height, \" h\").concat(maxMarkerWidth - width, \"Z\"));\n    }\n  }, {\n    key: \"createText\",\n    value: function createText(content, x, y, className) {\n      var element = this.create('text', className);\n      element.setAttribute('x', x);\n      element.setAttribute('y', y);\n      element.textContent = content;\n      return element;\n    }\n  }, {\n    key: \"createTspan\",\n    value: function createTspan(content, className) {\n      var element = this.create('tspan', className);\n      element.textContent = content;\n      return element;\n    }\n  }, {\n    key: \"createTitle\",\n    value: function createTitle(content) {\n      var element = this.create('title');\n      element.textContent = content;\n      return element;\n    }\n  }, {\n    key: \"createPath\",\n    value: function createPath() {\n      var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var element = this.create('path', className);\n\n      if (path) {\n        element.setAttribute('d', path);\n      }\n\n      if (color) {\n        element.setAttribute('fill', color);\n      }\n\n      return element;\n    }\n  }, {\n    key: \"create\",\n    value: function create(name) {\n      var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var element = document.createElementNS(this.ns, name);\n\n      if (className) {\n        element.setAttribute('class', className);\n      }\n\n      return element;\n    }\n  }]);\n\n  return SvgRenderer;\n}();\n\nvar Theme = /*#__PURE__*/function () {\n  function Theme(element) {\n    _classCallCheck(this, Theme);\n\n    this.reservedCategoryColors = {\n      'default': '#737373',\n      'section': '#a3a3a3',\n      'event_listener': '#54aeff',\n      'template': '#4ac26b',\n      'doctrine': '#fd8c73',\n      'messenger_middleware': '#ff8182',\n      'controller.argument_value_resolver': '#c297ff',\n      'http_client': '#d4a72c'\n    };\n    this.customCategoryColors = ['#d4a72c', // dark yellow\n    '#ffaba8', // light red\n    '#e6af05', // yellow\n    '#6fdd8b', // light green\n    '#76e3ea', // cyan\n    '#a475f9' // light purple\n    ];\n    this.getCategoryColor = this.getCategoryColor.bind(this);\n    this.getDefaultCategories = this.getDefaultCategories.bind(this);\n  }\n\n  _createClass(Theme, [{\n    key: \"getDefaultCategories\",\n    value: function getDefaultCategories() {\n      return Object.keys(this.reservedCategoryColors);\n    }\n  }, {\n    key: \"getCategoryColor\",\n    value: function getCategoryColor(category) {\n      return this.reservedCategoryColors[category] || this.getRandomColor(category);\n    }\n  }, {\n    key: \"getRandomColor\",\n    value: function getRandomColor(category) {\n      // instead of pure randomness, colors are assigned deterministically based on the\n      // category name, to ensure that each custom category always displays the same color\n      return this.customCategoryColors[this.hash(category) % this.customCategoryColors.length];\n    } // copied from https://github.com/darkskyapp/string-hash\n\n  }, {\n    key: \"hash\",\n    value: function hash(string) {\n      var hash = 5381;\n      var i = string.length;\n\n      while (i) {\n        hash = hash * 33 ^ string.charCodeAt(--i);\n      }\n\n      return hash >>> 0;\n    }\n  }]);\n\n  return Theme;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92ZW5kb3Ivc3ltZm9ueS93ZWItcHJvZmlsZXItYnVuZGxlL1Jlc291cmNlcy92aWV3cy9Db2xsZWN0b3IvdGltZS5qcz85NDk4Il0sIm5hbWVzIjpbIlRpbWVsaW5lRW5naW5lIiwidGhlbWUiLCJyZW5kZXJlciIsImxlZ2VuZCIsInRocmVzaG9sZCIsInJlcXVlc3QiLCJldmVudEhlaWdodCIsImhvcml6b250YWxNYXJnaW4iLCJzY2FsZSIsIndpZHRoIiwiZW5kIiwibGFiZWxZIiwiTWF0aCIsInJvdW5kIiwicGVyaW9kWSIsIkZxY25NYXRjaGVyIiwib3JpZ2luIiwiY3JlYXRlRXZlbnRFbGVtZW50cyIsImJpbmQiLCJjcmVhdGVCYWNrZ3JvdW5kIiwiY3JlYXRlUGVyaW9kIiwicmVuZGVyIiwicmVuZGVyRXZlbnQiLCJyZW5kZXJQZXJpb2QiLCJvblJlc2l6ZSIsImlzQWN0aXZlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIndpbmRvdyIsImNyZWF0ZUVsZW1lbnRzIiwibWVhc3VyZSIsInNldFNjYWxlIiwic2V0RnVsbFZlcnRpY2FsTGluZSIsImNyZWF0ZUJvcmRlciIsImFkZCIsImV2ZW50cyIsImZpbHRlciIsImV2ZW50IiwiY2F0ZWdvcnkiLCJtYXAiLCJmb3JFYWNoIiwic3VicmVxdWVzdCIsIm5hbWUiLCJiYWNrZ3JvdW5kIiwiY3JlYXRlIiwiZWxlbWVudHMiLCJPYmplY3QiLCJhc3NpZ24iLCJkdXJhdGlvbiIsIm1lbW9yeSIsInBlcmlvZHMiLCJib3JkZXIiLCJzZXRGdWxsSG9yaXpvbnRhbExpbmUiLCJsaW5lcyIsInBlcmlvZCIsImxhYmVsIiwiY3JlYXRlTGFiZWwiLCJnZXRTaG9ydE5hbWUiLCJ0aXRsZSIsImNyZWF0ZVRpdGxlIiwiZ3JvdXAiLCJjb25jYXQiLCJnZXRDYXRlZ29yeUNvbG9yIiwiY3JlYXRlVGV4dCIsInN0YXJ0Iiwic3VibGFiZWwiLCJjcmVhdGVUc3BhbiIsImFwcGVuZENoaWxkIiwidGltZWxpbmUiLCJjcmVhdGVQYXRoIiwiZHJhdyIsInNldFNlY3Rpb25MaW5lIiwic2V0UGVyaW9kTGluZSIsInZhbHVlIiwiaGVpZ2h0IiwibGVuZ3RoIiwic2V0Vmlld0JveCIsImluZGV4T2YiLCJpbmRleCIsInZpc2libGUiLCJzZXRBdHRyaWJ1dGUiLCJnZXRFdmVudExpbWl0cyIsIm1pbiIsIm1heCIsInNldEZ1bGxSZWN0YW5nbGUiLCJyZW5kZXJMYWJlbCIsImdldExhYmVsV2lkdGgiLCJhbGlnbkxlZnQiLCJnZXRCQm94IiwibGltaXRzIiwibWF0Y2hlcyIsImV4ZWMiLCJMZWdlbmQiLCJlbGVtZW50IiwidG9nZ2xlIiwiY3JlYXRlQ2F0ZWdvcnkiLCJjYXRlZ29yaWVzIiwiZ2V0RGVmYXVsdENhdGVnb3JpZXMiLCJnZXQiLCJjbGFzc0xpc3QiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJzdHlsZSIsImJvcmRlckNvbG9yIiwiaW5uZXJUZXh0IiwidHlwZSIsInB1c2giLCJ0YXJnZXQiLCJlbWl0IiwiY29udGFpbnMiLCJmaW5kIiwiZGlzcGF0Y2hFdmVudCIsIkV2ZW50IiwiY2FsbGJhY2siLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiU3ZnUmVuZGVyZXIiLCJucyIsInZpZXdCb3giLCJ4IiwieSIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInNldEhvcml6b250YWxMaW5lIiwic2V0VmVydGljYWxMaW5lIiwibWFya2VyU2l6ZSIsInRvdGFsSGVpZ2h0IiwibWF4TWFya2VyV2lkdGgiLCJ3aWR0aFdpdGhvdXRNYXJrZXIiLCJtYXJrZXJXaWR0aCIsIm1hcmtlckhlaWdodCIsImNvbnRlbnQiLCJ0ZXh0Q29udGVudCIsInBhdGgiLCJjb2xvciIsImNyZWF0ZUVsZW1lbnROUyIsIlRoZW1lIiwicmVzZXJ2ZWRDYXRlZ29yeUNvbG9ycyIsImN1c3RvbUNhdGVnb3J5Q29sb3JzIiwia2V5cyIsImdldFJhbmRvbUNvbG9yIiwiaGFzaCIsInN0cmluZyIsImkiLCJjaGFyQ29k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bGVyLWJ1bmRsZS9SZXNvdXJjZXMvdmlld3MvQ29sbGVjdG9yL3RpbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNsYXNzIFRpbWVsaW5lRW5naW5lIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gIHtUaGVtZX0gdGhlbWVcbiAgICAgKiBAcGFyYW0gIHtSZW5kZXJlcn0gcmVuZGVyZXJcbiAgICAgKiBAcGFyYW0gIHtMZWdlbmR9IGxlZ2VuZFxuICAgICAqIEBwYXJhbSAge0VsZW1lbnR9IHRocmVzaG9sZFxuICAgICAqIEBwYXJhbSAge09iamVjdH0gcmVxdWVzdFxuICAgICAqIEBwYXJhbSAge051bWJlcn0gZXZlbnRIZWlnaHRcbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IGhvcml6b250YWxNYXJnaW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcih0aGVtZSwgcmVuZGVyZXIsIGxlZ2VuZCwgdGhyZXNob2xkLCByZXF1ZXN0LCBldmVudEhlaWdodCA9IDM2LCBob3Jpem9udGFsTWFyZ2luID0gMTApIHtcbiAgICAgICAgdGhpcy50aGVtZSA9IHRoZW1lO1xuICAgICAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgICAgIHRoaXMubGVnZW5kID0gbGVnZW5kO1xuICAgICAgICB0aGlzLnRocmVzaG9sZCA9IHRocmVzaG9sZDtcbiAgICAgICAgdGhpcy5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgICAgICAgdGhpcy5zY2FsZSA9IHJlbmRlcmVyLndpZHRoIC8gcmVxdWVzdC5lbmQ7XG4gICAgICAgIHRoaXMuZXZlbnRIZWlnaHQgPSBldmVudEhlaWdodDtcbiAgICAgICAgdGhpcy5ob3Jpem9udGFsTWFyZ2luID0gaG9yaXpvbnRhbE1hcmdpbjtcbiAgICAgICAgdGhpcy5sYWJlbFkgPSBNYXRoLnJvdW5kKHRoaXMuZXZlbnRIZWlnaHQgKiAwLjQ4KTtcbiAgICAgICAgdGhpcy5wZXJpb2RZID0gTWF0aC5yb3VuZCh0aGlzLmV2ZW50SGVpZ2h0ICogMC42Nik7XG4gICAgICAgIHRoaXMuRnFjbk1hdGNoZXIgPSAvXFxcXChbXlxcXFxdKykkL2k7XG4gICAgICAgIHRoaXMub3JpZ2luID0gbnVsbDtcblxuICAgICAgICB0aGlzLmNyZWF0ZUV2ZW50RWxlbWVudHMgPSB0aGlzLmNyZWF0ZUV2ZW50RWxlbWVudHMuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5jcmVhdGVCYWNrZ3JvdW5kID0gdGhpcy5jcmVhdGVCYWNrZ3JvdW5kLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuY3JlYXRlUGVyaW9kID0gdGhpcy5jcmVhdGVQZXJpb2QuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5yZW5kZXIgPSB0aGlzLnJlbmRlci5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnJlbmRlckV2ZW50ID0gdGhpcy5yZW5kZXJFdmVudC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnJlbmRlclBlcmlvZCA9IHRoaXMucmVuZGVyUGVyaW9kLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMub25SZXNpemUgPSB0aGlzLm9uUmVzaXplLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuaXNBY3RpdmUgPSB0aGlzLmlzQWN0aXZlLmJpbmQodGhpcyk7XG5cbiAgICAgICAgdGhpcy50aHJlc2hvbGQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdGhpcy5yZW5kZXIpO1xuICAgICAgICB0aGlzLmxlZ2VuZC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLnJlbmRlcik7XG5cbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMub25SZXNpemUpO1xuXG4gICAgICAgIHRoaXMuY3JlYXRlRWxlbWVudHMoKTtcbiAgICAgICAgdGhpcy5yZW5kZXIoKTtcbiAgICB9XG5cbiAgICBvblJlc2l6ZSgpIHtcbiAgICAgICAgdGhpcy5yZW5kZXJlci5tZWFzdXJlKCk7XG4gICAgICAgIHRoaXMuc2V0U2NhbGUodGhpcy5yZW5kZXJlci53aWR0aCAvIHRoaXMucmVxdWVzdC5lbmQpO1xuICAgIH1cblxuICAgIHNldFNjYWxlKHNjYWxlKSB7XG4gICAgICAgIGlmIChzY2FsZSAhPT0gdGhpcy5zY2FsZSkge1xuICAgICAgICAgICAgdGhpcy5zY2FsZSA9IHNjYWxlO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXIoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNyZWF0ZUVsZW1lbnRzKCkge1xuICAgICAgICB0aGlzLm9yaWdpbiA9IHRoaXMucmVuZGVyZXIuc2V0RnVsbFZlcnRpY2FsTGluZSh0aGlzLmNyZWF0ZUJvcmRlcigpLCAwKTtcbiAgICAgICAgdGhpcy5yZW5kZXJlci5hZGQodGhpcy5vcmlnaW4pO1xuXG4gICAgICAgIHRoaXMucmVxdWVzdC5ldmVudHNcbiAgICAgICAgICAgIC5maWx0ZXIoZXZlbnQgPT4gZXZlbnQuY2F0ZWdvcnkgPT09ICdzZWN0aW9uJylcbiAgICAgICAgICAgIC5tYXAodGhpcy5jcmVhdGVCYWNrZ3JvdW5kKVxuICAgICAgICAgICAgLmZvckVhY2godGhpcy5yZW5kZXJlci5hZGQpO1xuXG4gICAgICAgIHRoaXMucmVxdWVzdC5ldmVudHNcbiAgICAgICAgICAgIC5tYXAodGhpcy5jcmVhdGVFdmVudEVsZW1lbnRzKVxuICAgICAgICAgICAgLmZvckVhY2godGhpcy5yZW5kZXJlci5hZGQpO1xuICAgIH1cblxuICAgIGNyZWF0ZUJhY2tncm91bmQoZXZlbnQpIHtcbiAgICAgICAgY29uc3Qgc3VicmVxdWVzdCA9IGV2ZW50Lm5hbWUgPT09ICdfX3NlY3Rpb25fXy5jaGlsZCc7XG4gICAgICAgIGNvbnN0IGJhY2tncm91bmQgPSB0aGlzLnJlbmRlcmVyLmNyZWF0ZSgncmVjdCcsIHN1YnJlcXVlc3QgPyAndGltZWxpbmUtc3VicmVxdWVzdCcgOiAndGltZWxpbmUtYm9yZGVyJyk7XG5cbiAgICAgICAgZXZlbnQuZWxlbWVudHMgPSBPYmplY3QuYXNzaWduKGV2ZW50LmVsZW1lbnRzIHx8IHt9LCB7IGJhY2tncm91bmQgfSk7XG5cbiAgICAgICAgcmV0dXJuIGJhY2tncm91bmQ7XG4gICAgfVxuXG4gICAgY3JlYXRlRXZlbnRFbGVtZW50cyhldmVudCkge1xuICAgICAgICBjb25zdCB7IG5hbWUsIGNhdGVnb3J5LCBkdXJhdGlvbiwgbWVtb3J5LCBwZXJpb2RzIH0gPSBldmVudDtcbiAgICAgICAgY29uc3QgYm9yZGVyID0gdGhpcy5yZW5kZXJlci5zZXRGdWxsSG9yaXpvbnRhbExpbmUodGhpcy5jcmVhdGVCb3JkZXIoKSwgMCk7XG4gICAgICAgIGNvbnN0IGxpbmVzID0gcGVyaW9kcy5tYXAocGVyaW9kID0+IHRoaXMuY3JlYXRlUGVyaW9kKHBlcmlvZCwgY2F0ZWdvcnkpKTtcbiAgICAgICAgY29uc3QgbGFiZWwgPSB0aGlzLmNyZWF0ZUxhYmVsKHRoaXMuZ2V0U2hvcnROYW1lKG5hbWUpLCBkdXJhdGlvbiwgbWVtb3J5LCBwZXJpb2RzWzBdKTtcbiAgICAgICAgY29uc3QgdGl0bGUgPSB0aGlzLnJlbmRlcmVyLmNyZWF0ZVRpdGxlKG5hbWUpO1xuICAgICAgICBjb25zdCBncm91cCA9IHRoaXMucmVuZGVyZXIuZ3JvdXAoW3RpdGxlLCBib3JkZXIsIGxhYmVsXS5jb25jYXQobGluZXMpLCB0aGlzLnRoZW1lLmdldENhdGVnb3J5Q29sb3IoZXZlbnQuY2F0ZWdvcnkpKTtcblxuICAgICAgICBldmVudC5lbGVtZW50cyA9IE9iamVjdC5hc3NpZ24oZXZlbnQuZWxlbWVudHMgfHwge30sIHsgZ3JvdXAsIGxhYmVsLCBib3JkZXIgfSk7XG5cbiAgICAgICAgdGhpcy5sZWdlbmQuYWRkKGV2ZW50LmNhdGVnb3J5KVxuXG4gICAgICAgIHJldHVybiBncm91cDtcbiAgICB9XG5cbiAgICBjcmVhdGVMYWJlbChuYW1lLCBkdXJhdGlvbiwgbWVtb3J5LCBwZXJpb2QpIHtcbiAgICAgICAgY29uc3QgbGFiZWwgPSB0aGlzLnJlbmRlcmVyLmNyZWF0ZVRleHQobmFtZSwgcGVyaW9kLnN0YXJ0ICogdGhpcy5zY2FsZSwgdGhpcy5sYWJlbFksICd0aW1lbGluZS1sYWJlbCcpO1xuICAgICAgICBjb25zdCBzdWJsYWJlbCA9IHRoaXMucmVuZGVyZXIuY3JlYXRlVHNwYW4oYCAgJHtkdXJhdGlvbn0gbXMgLyAke21lbW9yeX0gTWlCYCwgJ3RpbWVsaW5lLXN1YmxhYmVsJyk7XG5cbiAgICAgICAgbGFiZWwuYXBwZW5kQ2hpbGQoc3VibGFiZWwpO1xuXG4gICAgICAgIHJldHVybiBsYWJlbDtcbiAgICB9XG5cbiAgICBjcmVhdGVQZXJpb2QocGVyaW9kLCBjYXRlZ29yeSkge1xuICAgICAgICBjb25zdCB0aW1lbGluZSA9IHRoaXMucmVuZGVyZXIuY3JlYXRlUGF0aChudWxsLCAndGltZWxpbmUtcGVyaW9kJywgdGhpcy50aGVtZS5nZXRDYXRlZ29yeUNvbG9yKGNhdGVnb3J5KSk7XG5cbiAgICAgICAgcGVyaW9kLmRyYXcgPSBjYXRlZ29yeSA9PT0gJ3NlY3Rpb24nID8gdGhpcy5yZW5kZXJlci5zZXRTZWN0aW9uTGluZSA6IHRoaXMucmVuZGVyZXIuc2V0UGVyaW9kTGluZTtcbiAgICAgICAgcGVyaW9kLmVsZW1lbnRzID0gT2JqZWN0LmFzc2lnbihwZXJpb2QuZWxlbWVudHMgfHwge30sIHsgdGltZWxpbmUgfSk7XG5cbiAgICAgICAgcmV0dXJuIHRpbWVsaW5lO1xuICAgIH1cblxuICAgIGNyZWF0ZUJvcmRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuY3JlYXRlUGF0aChudWxsLCAndGltZWxpbmUtYm9yZGVyJyk7XG4gICAgfVxuXG4gICAgaXNBY3RpdmUoZXZlbnQpIHtcbiAgICAgICAgY29uc3QgeyBkdXJhdGlvbiwgY2F0ZWdvcnkgfSA9IGV2ZW50O1xuXG4gICAgICAgIHJldHVybiBkdXJhdGlvbiA+PSB0aGlzLnRocmVzaG9sZC52YWx1ZSAmJiB0aGlzLmxlZ2VuZC5pc0FjdGl2ZShjYXRlZ29yeSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCBldmVudHMgPSB0aGlzLnJlcXVlc3QuZXZlbnRzLmZpbHRlcih0aGlzLmlzQWN0aXZlKTtcbiAgICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLnJlbmRlcmVyLndpZHRoICsgdGhpcy5ob3Jpem9udGFsTWFyZ2luICogMjtcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gdGhpcy5ldmVudEhlaWdodCAqIGV2ZW50cy5sZW5ndGg7XG5cbiAgICAgICAgLy8gU2V0IHZpZXcgYm94XG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2V0Vmlld0JveCgtdGhpcy5ob3Jpem9udGFsTWFyZ2luLCAwLCB3aWR0aCwgaGVpZ2h0KTtcblxuICAgICAgICAvLyBTaG93IDBtcyBvcmlnaW5cbiAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRGdWxsVmVydGljYWxMaW5lKHRoaXMub3JpZ2luLCAwKTtcblxuICAgICAgICAvLyBSZW5kZXIgYWxsIGV2ZW50c1xuICAgICAgICB0aGlzLnJlcXVlc3QuZXZlbnRzLmZvckVhY2goZXZlbnQgPT4gdGhpcy5yZW5kZXJFdmVudChldmVudCwgZXZlbnRzLmluZGV4T2YoZXZlbnQpKSk7XG4gICAgfVxuXG4gICAgcmVuZGVyRXZlbnQoZXZlbnQsIGluZGV4KSB7XG4gICAgICAgIGNvbnN0IHsgbmFtZSwgY2F0ZWdvcnksIGR1cmF0aW9uLCBtZW1vcnksIHBlcmlvZHMsIGVsZW1lbnRzIH0gPSBldmVudDtcbiAgICAgICAgY29uc3QgeyBncm91cCwgbGFiZWwsIGJvcmRlciwgYmFja2dyb3VuZCB9ID0gZWxlbWVudHM7XG4gICAgICAgIGNvbnN0IHZpc2libGUgPSBpbmRleCA+PSAwO1xuXG4gICAgICAgIGdyb3VwLnNldEF0dHJpYnV0ZSgndmlzaWJpbGl0eScsIHZpc2libGUgPyAndmlzaWJsZScgOiAnaGlkZGVuJyk7XG5cbiAgICAgICAgaWYgKGJhY2tncm91bmQpIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQuc2V0QXR0cmlidXRlKCd2aXNpYmlsaXR5JywgdmlzaWJsZSA/ICd2aXNpYmxlJyA6ICdoaWRkZW4nKTtcblxuICAgICAgICAgICAgaWYgKHZpc2libGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbbWluLCBtYXhdID0gdGhpcy5nZXRFdmVudExpbWl0cyhldmVudCk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnNldEZ1bGxSZWN0YW5nbGUoYmFja2dyb3VuZCwgbWluICogdGhpcy5zY2FsZSwgbWF4ICogdGhpcy5zY2FsZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmlzaWJsZSkge1xuICAgICAgICAgICAgLy8gUG9zaXRpb24gdGhlIGdyb3VwXG4gICAgICAgICAgICBncm91cC5zZXRBdHRyaWJ1dGUoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoMCwgJHtpbmRleCAqIHRoaXMuZXZlbnRIZWlnaHR9KWApO1xuXG4gICAgICAgICAgICAvLyBVcGRhdGUgdG9wIGJvcmRlclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRGdWxsSG9yaXpvbnRhbExpbmUoYm9yZGVyLCAwKTtcblxuICAgICAgICAgICAgLy8gcmVuZGVyIGxhYmVsIGFuZCBlbnN1cmUgaXQgZG9lc24ndCBlc2NhcGUgdGhlIHZpZXdwb3J0XG4gICAgICAgICAgICB0aGlzLnJlbmRlckxhYmVsKGxhYmVsLCBldmVudCk7XG5cbiAgICAgICAgICAgIC8vIFVwZGF0ZSBwZXJpb2RzXG4gICAgICAgICAgICBwZXJpb2RzLmZvckVhY2godGhpcy5yZW5kZXJQZXJpb2QpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyTGFiZWwobGFiZWwsIGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHdpZHRoID0gdGhpcy5nZXRMYWJlbFdpZHRoKGxhYmVsKTtcbiAgICAgICAgY29uc3QgW21pbiwgbWF4XSA9IHRoaXMuZ2V0RXZlbnRMaW1pdHMoZXZlbnQpO1xuICAgICAgICBjb25zdCBhbGlnbkxlZnQgPSAobWluICogdGhpcy5zY2FsZSkgKyB3aWR0aCA8PSB0aGlzLnJlbmRlcmVyLndpZHRoO1xuXG4gICAgICAgIGxhYmVsLnNldEF0dHJpYnV0ZSgneCcsIChhbGlnbkxlZnQgPyBtaW4gOiBtYXgpICogdGhpcy5zY2FsZSk7XG4gICAgICAgIGxhYmVsLnNldEF0dHJpYnV0ZSgndGV4dC1hbmNob3InLCBhbGlnbkxlZnQgPyAnc3RhcnQnIDogJ2VuZCcpO1xuICAgIH1cblxuICAgIHJlbmRlclBlcmlvZChwZXJpb2QpIHtcbiAgICAgICAgY29uc3QgeyBlbGVtZW50cywgc3RhcnQsIGR1cmF0aW9uIH0gPSBwZXJpb2Q7XG5cbiAgICAgICAgcGVyaW9kLmRyYXcoZWxlbWVudHMudGltZWxpbmUsIHN0YXJ0ICogdGhpcy5zY2FsZSwgdGhpcy5wZXJpb2RZLCBNYXRoLm1heChkdXJhdGlvbiAqIHRoaXMuc2NhbGUsIDEpKTtcbiAgICB9XG5cbiAgICBnZXRMYWJlbFdpZHRoKGxhYmVsKSB7XG4gICAgICAgIGlmICh0eXBlb2YgbGFiZWwud2lkdGggPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBsYWJlbC53aWR0aCA9IGxhYmVsLmdldEJCb3goKS53aWR0aDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBsYWJlbC53aWR0aDtcbiAgICB9XG5cbiAgICBnZXRFdmVudExpbWl0cyhldmVudCkge1xuICAgICAgICBpZiAodHlwZW9mIGV2ZW50LmxpbWl0cyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgcGVyaW9kcyB9ID0gZXZlbnQ7XG5cbiAgICAgICAgICAgIGV2ZW50LmxpbWl0cyA9IFtcbiAgICAgICAgICAgICAgICBwZXJpb2RzWzBdLnN0YXJ0LFxuICAgICAgICAgICAgICAgIHBlcmlvZHNbcGVyaW9kcy5sZW5ndGggLSAxXS5lbmRcbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZXZlbnQubGltaXRzO1xuICAgIH1cblxuICAgIGdldFNob3J0TmFtZShuYW1lKSB7XG4gICAgICAgIGNvbnN0IG1hdGNoZXMgPSB0aGlzLkZxY25NYXRjaGVyLmV4ZWMobmFtZSk7XG5cbiAgICAgICAgaWYgKG1hdGNoZXMpIHtcbiAgICAgICAgICAgIHJldHVybiBtYXRjaGVzWzFdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5hbWU7XG4gICAgfVxufVxuXG5jbGFzcyBMZWdlbmQge1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQsIHRoZW1lKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgICAgIHRoaXMudGhlbWUgPSB0aGVtZTtcblxuICAgICAgICB0aGlzLnRvZ2dsZSA9IHRoaXMudG9nZ2xlLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuY3JlYXRlQ2F0ZWdvcnkgPSB0aGlzLmNyZWF0ZUNhdGVnb3J5LmJpbmQodGhpcyk7XG5cbiAgICAgICAgdGhpcy5jYXRlZ29yaWVzID0gW107XG4gICAgICAgIHRoaXMudGhlbWUuZ2V0RGVmYXVsdENhdGVnb3JpZXMoKS5mb3JFYWNoKHRoaXMuY3JlYXRlQ2F0ZWdvcnkpO1xuICAgIH1cblxuICAgIGFkZChjYXRlZ29yeSkge1xuICAgICAgICB0aGlzLmdldChjYXRlZ29yeSkuY2xhc3NMaXN0LmFkZCgncHJlc2VudCcpO1xuICAgIH1cblxuICAgIGNyZWF0ZUNhdGVnb3J5KGNhdGVnb3J5KSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgZWxlbWVudC5jbGFzc05hbWUgPSBgdGltZWxpbmUtY2F0ZWdvcnkgYWN0aXZlYDtcbiAgICAgICAgZWxlbWVudC5zdHlsZS5ib3JkZXJDb2xvciA9IHRoaXMudGhlbWUuZ2V0Q2F0ZWdvcnlDb2xvcihjYXRlZ29yeSk7XG4gICAgICAgIGVsZW1lbnQuaW5uZXJUZXh0ID0gY2F0ZWdvcnk7XG4gICAgICAgIGVsZW1lbnQudmFsdWUgPSBjYXRlZ29yeTtcbiAgICAgICAgZWxlbWVudC50eXBlID0gJ2J1dHRvbic7XG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLnRvZ2dsZSk7XG5cbiAgICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuXG4gICAgICAgIHRoaXMuY2F0ZWdvcmllcy5wdXNoKGVsZW1lbnQpO1xuXG4gICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgIH1cblxuICAgIHRvZ2dsZShldmVudCkge1xuICAgICAgICBldmVudC50YXJnZXQuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyk7XG5cbiAgICAgICAgdGhpcy5lbWl0KCdjaGFuZ2UnKTtcbiAgICB9XG5cbiAgICBpc0FjdGl2ZShjYXRlZ29yeSkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXQoY2F0ZWdvcnkpLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJyk7XG4gICAgfVxuXG4gICAgZ2V0KGNhdGVnb3J5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhdGVnb3JpZXMuZmluZChlbGVtZW50ID0+IGVsZW1lbnQudmFsdWUgPT09IGNhdGVnb3J5KSB8fCB0aGlzLmNyZWF0ZUNhdGVnb3J5KGNhdGVnb3J5KTtcbiAgICB9XG5cbiAgICBlbWl0KG5hbWUpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KG5hbWUpKTtcbiAgICB9XG5cbiAgICBhZGRFdmVudExpc3RlbmVyKG5hbWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKG5hbWUsIGNhbGxiYWNrKTtcbiAgICB9XG5cbiAgICByZW1vdmVFdmVudExpc3RlbmVyKG5hbWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKG5hbWUsIGNhbGxiYWNrKTtcbiAgICB9XG59XG5cbmNsYXNzIFN2Z1JlbmRlcmVyIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gIHtTVkdFbGVtZW50fSBlbGVtZW50XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZWxlbWVudCkge1xuICAgICAgICB0aGlzLm5zID0gJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJztcbiAgICAgICAgdGhpcy53aWR0aCA9IG51bGw7XG4gICAgICAgIHRoaXMudmlld0JveCA9IHt9O1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuXG4gICAgICAgIHRoaXMuYWRkID0gdGhpcy5hZGQuYmluZCh0aGlzKTtcblxuICAgICAgICB0aGlzLnNldFZpZXdCb3goMCwgMCwgMCwgMCk7XG4gICAgICAgIHRoaXMubWVhc3VyZSgpO1xuICAgIH1cblxuICAgIHNldFZpZXdCb3goeCwgeSwgd2lkdGgsIGhlaWdodCkge1xuICAgICAgICB0aGlzLnZpZXdCb3ggPSB7IHgsIHksIHdpZHRoLCBoZWlnaHQgfTtcbiAgICAgICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZSgndmlld0JveCcsIGAke3h9ICR7eX0gJHt3aWR0aH0gJHtoZWlnaHR9YCk7XG4gICAgfVxuXG4gICAgbWVhc3VyZSgpIHtcbiAgICAgICAgdGhpcy53aWR0aCA9IHRoaXMuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDtcbiAgICB9XG5cbiAgICBhZGQoZWxlbWVudCkge1xuICAgICAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQoZWxlbWVudCk7XG4gICAgfVxuXG4gICAgZ3JvdXAoZWxlbWVudHMsIGNsYXNzTmFtZSkge1xuICAgICAgICBjb25zdCBncm91cCA9IHRoaXMuY3JlYXRlKCdnJywgY2xhc3NOYW1lKTtcblxuICAgICAgICBlbGVtZW50cy5mb3JFYWNoKGVsZW1lbnQgPT4gZ3JvdXAuYXBwZW5kQ2hpbGQoZWxlbWVudCkpO1xuXG4gICAgICAgIHJldHVybiBncm91cDtcbiAgICB9XG5cbiAgICBzZXRIb3Jpem9udGFsTGluZShlbGVtZW50LCB4LCB5LCB3aWR0aCkge1xuICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnZCcsIGBNJHt4fSwke3l9IGgke3dpZHRofWApO1xuXG4gICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgIH1cblxuICAgIHNldFZlcnRpY2FsTGluZShlbGVtZW50LCB4LCB5LCBoZWlnaHQpIHtcbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2QnLCBgTSR7eH0sJHt5fSB2JHtoZWlnaHR9YCk7XG5cbiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgfVxuXG4gICAgc2V0RnVsbEhvcml6b250YWxMaW5lKGVsZW1lbnQsIHkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2V0SG9yaXpvbnRhbExpbmUoZWxlbWVudCwgdGhpcy52aWV3Qm94LngsIHksIHRoaXMudmlld0JveC53aWR0aCk7XG4gICAgfVxuXG4gICAgc2V0RnVsbFZlcnRpY2FsTGluZShlbGVtZW50LCB4KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldFZlcnRpY2FsTGluZShlbGVtZW50LCB4LCB0aGlzLnZpZXdCb3gueSwgdGhpcy52aWV3Qm94LmhlaWdodCk7XG4gICAgfVxuXG4gICAgc2V0RnVsbFJlY3RhbmdsZShlbGVtZW50LCBtaW4sIG1heCkge1xuICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgneCcsIG1pbik7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCd5JywgdGhpcy52aWV3Qm94LnkpO1xuICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnd2lkdGgnLCBtYXggLSBtaW4pO1xuICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnaGVpZ2h0JywgdGhpcy52aWV3Qm94LmhlaWdodCk7XG4gICAgfVxuXG4gICAgc2V0U2VjdGlvbkxpbmUoZWxlbWVudCwgeCwgeSwgd2lkdGgsIGhlaWdodCA9IDQsIG1hcmtlclNpemUgPSA2KSB7XG4gICAgICAgIGNvbnN0IHRvdGFsSGVpZ2h0ID0gaGVpZ2h0ICsgbWFya2VyU2l6ZTtcbiAgICAgICAgY29uc3QgbWF4TWFya2VyV2lkdGggPSBNYXRoLm1pbihtYXJrZXJTaXplLCB3aWR0aCAvIDIpO1xuICAgICAgICBjb25zdCB3aWR0aFdpdGhvdXRNYXJrZXIgPSBNYXRoLm1heCgwLCB3aWR0aCAtIChtYXhNYXJrZXJXaWR0aCAqIDIpKTtcblxuICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnZCcsIGBNJHt4fSwke3kgKyB0b3RhbEhlaWdodH0gdiR7LXRvdGFsSGVpZ2h0fSBoJHt3aWR0aH0gdiR7dG90YWxIZWlnaHR9IGwkey1tYXhNYXJrZXJXaWR0aH0gJHstbWFya2VyU2l6ZX0gaCR7LXdpZHRoV2l0aG91dE1hcmtlcn0gWmApO1xuICAgIH1cblxuICAgIHNldFBlcmlvZExpbmUoZWxlbWVudCwgeCwgeSwgd2lkdGgsIGhlaWdodCA9IDQsIG1hcmtlcldpZHRoID0gMiwgbWFya2VySGVpZ2h0ID0gNCkge1xuICAgICAgICBjb25zdCB0b3RhbEhlaWdodCA9IGhlaWdodCArIG1hcmtlckhlaWdodDtcbiAgICAgICAgY29uc3QgbWF4TWFya2VyV2lkdGggPSBNYXRoLm1pbihtYXJrZXJXaWR0aCwgd2lkdGgpO1xuXG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkJywgYE0ke3ggKyBtYXhNYXJrZXJXaWR0aH0sJHt5ICsgdG90YWxIZWlnaHR9IGgkey1tYXhNYXJrZXJXaWR0aH0gdiR7LXRvdGFsSGVpZ2h0fSBoJHt3aWR0aH0gdiR7aGVpZ2h0fSBoJHttYXhNYXJrZXJXaWR0aC13aWR0aH1aYCk7XG4gICAgfVxuXG4gICAgY3JlYXRlVGV4dChjb250ZW50LCB4LCB5LCBjbGFzc05hbWUpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMuY3JlYXRlKCd0ZXh0JywgY2xhc3NOYW1lKTtcblxuICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgneCcsIHgpO1xuICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgneScsIHkpO1xuICAgICAgICBlbGVtZW50LnRleHRDb250ZW50ID0gY29udGVudDtcblxuICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICB9XG5cbiAgICBjcmVhdGVUc3Bhbihjb250ZW50LCBjbGFzc05hbWUpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMuY3JlYXRlKCd0c3BhbicsIGNsYXNzTmFtZSk7XG5cbiAgICAgICAgZWxlbWVudC50ZXh0Q29udGVudCA9IGNvbnRlbnQ7XG5cbiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgfVxuXG4gICAgY3JlYXRlVGl0bGUoY29udGVudCkge1xuICAgICAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5jcmVhdGUoJ3RpdGxlJyk7XG5cbiAgICAgICAgZWxlbWVudC50ZXh0Q29udGVudCA9IGNvbnRlbnQ7XG5cbiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgfVxuXG4gICAgY3JlYXRlUGF0aChwYXRoID0gbnVsbCwgY2xhc3NOYW1lID0gbnVsbCwgY29sb3IgPSBudWxsKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLmNyZWF0ZSgncGF0aCcsIGNsYXNzTmFtZSk7XG5cbiAgICAgICAgaWYgKHBhdGgpIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkJywgcGF0aCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY29sb3IpIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdmaWxsJywgY29sb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgfVxuXG4gICAgY3JlYXRlKG5hbWUsIGNsYXNzTmFtZSA9IG51bGwpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh0aGlzLm5zLCBuYW1lKTtcblxuICAgICAgICBpZiAoY2xhc3NOYW1lKSB7XG4gICAgICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnY2xhc3MnLCBjbGFzc05hbWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgfVxufVxuXG5jbGFzcyBUaGVtZSB7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudCkge1xuICAgICAgICB0aGlzLnJlc2VydmVkQ2F0ZWdvcnlDb2xvcnMgPSB7XG4gICAgICAgICAgICAnZGVmYXVsdCc6ICcjNzM3MzczJyxcbiAgICAgICAgICAgICdzZWN0aW9uJzogJyNhM2EzYTMnLFxuICAgICAgICAgICAgJ2V2ZW50X2xpc3RlbmVyJzogJyM1NGFlZmYnLFxuICAgICAgICAgICAgJ3RlbXBsYXRlJzogJyM0YWMyNmInLFxuICAgICAgICAgICAgJ2RvY3RyaW5lJzogJyNmZDhjNzMnLFxuICAgICAgICAgICAgJ21lc3Nlbmdlcl9taWRkbGV3YXJlJzogJyNmZjgxODInLFxuICAgICAgICAgICAgJ2NvbnRyb2xsZXIuYXJndW1lbnRfdmFsdWVfcmVzb2x2ZXInOiAnI2MyOTdmZicsXG4gICAgICAgICAgICAnaHR0cF9jbGllbnQnOiAnI2Q0YTcyYycsXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5jdXN0b21DYXRlZ29yeUNvbG9ycyA9IFtcbiAgICAgICAgICAgICcjZDRhNzJjJywgLy8gZGFyayB5ZWxsb3dcbiAgICAgICAgICAgICcjZmZhYmE4JywgLy8gbGlnaHQgcmVkXG4gICAgICAgICAgICAnI2U2YWYwNScsIC8vIHllbGxvd1xuICAgICAgICAgICAgJyM2ZmRkOGInLCAvLyBsaWdodCBncmVlblxuICAgICAgICAgICAgJyM3NmUzZWEnLCAvLyBjeWFuXG4gICAgICAgICAgICAnI2E0NzVmOScsIC8vIGxpZ2h0IHB1cnBsZVxuICAgICAgICBdO1xuXG4gICAgICAgIHRoaXMuZ2V0Q2F0ZWdvcnlDb2xvciA9IHRoaXMuZ2V0Q2F0ZWdvcnlDb2xvci5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmdldERlZmF1bHRDYXRlZ29yaWVzID0gdGhpcy5nZXREZWZhdWx0Q2F0ZWdvcmllcy5iaW5kKHRoaXMpO1xuICAgIH1cblxuICAgIGdldERlZmF1bHRDYXRlZ29yaWVzKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5yZXNlcnZlZENhdGVnb3J5Q29sb3JzKTtcbiAgICB9XG5cbiAgICBnZXRDYXRlZ29yeUNvbG9yKGNhdGVnb3J5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlc2VydmVkQ2F0ZWdvcnlDb2xvcnNbY2F0ZWdvcnldIHx8IHRoaXMuZ2V0UmFuZG9tQ29sb3IoY2F0ZWdvcnkpO1xuICAgIH1cblxuICAgIGdldFJhbmRvbUNvbG9yKGNhdGVnb3J5KSB7XG4gICAgICAgIC8vIGluc3RlYWQgb2YgcHVyZSByYW5kb21uZXNzLCBjb2xvcnMgYXJlIGFzc2lnbmVkIGRldGVybWluaXN0aWNhbGx5IGJhc2VkIG9uIHRoZVxuICAgICAgICAvLyBjYXRlZ29yeSBuYW1lLCB0byBlbnN1cmUgdGhhdCBlYWNoIGN1c3RvbSBjYXRlZ29yeSBhbHdheXMgZGlzcGxheXMgdGhlIHNhbWUgY29sb3JcbiAgICAgICAgcmV0dXJuIHRoaXMuY3VzdG9tQ2F0ZWdvcnlDb2xvcnNbdGhpcy5oYXNoKGNhdGVnb3J5KSAlIHRoaXMuY3VzdG9tQ2F0ZWdvcnlDb2xvcnMubGVuZ3RoXTtcbiAgICB9XG5cbiAgICAvLyBjb3BpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZGFya3NreWFwcC9zdHJpbmctaGFzaFxuICAgIGhhc2goc3RyaW5nKSB7XG4gICAgICAgIHZhciBoYXNoID0gNTM4MTtcbiAgICAgICAgdmFyIGkgPSBzdHJpbmcubGVuZ3RoO1xuXG4gICAgICAgIHdoaWxlKGkpIHtcbiAgICAgICAgICAgIGhhc2ggPSAoaGFzaCAqIDMzKSBeIHN0cmluZy5jaGFyQ29kZUF0KC0taSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaGFzaCA+Pj4gMDtcbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./vendor/symfony/web-profiler-bundle/Resources/views/Collector/time.js\n");

/***/ })

/******/ })));