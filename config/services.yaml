# config/services.yaml

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

parameters:
    profile_pictures_directory: '%kernel.project_dir%/public/uploads/profile_pictures'
    club_photos_directory: '%kernel.project_dir%/public/uploads/club_photos'
    photos_directory: '%kernel.project_dir%/public/uploads/photos'
    users_image_directory: '%kernel.project_dir%/public/uploads/users'
    signatures_directory: '%kernel.project_dir%/public/signatures'
    materiels_directory: '%kernel.project_dir%/public/uploads/materiels'
    kernel.logs_dir: '%kernel.project_dir%/var/log'
    app.api_ninja_key: '%env(API_NINJA_KEY)%'  # Added for GeocodingService
    google_credentials_path: '%kernel.project_dir%/config/secrets/google_credentials.json'
    google_token_path: '%kernel.project_dir%/config/secrets/google_token.json'
    google_calendar_id: 'primary'
    event_id_storage_path: '%kernel.project_dir%/var/event_ids.json'

    videos_directory: '%kernel.project_dir%/public/uploads/input_videos'
    output_videos_directory: '%kernel.project_dir%/public/uploads/output_videos'
    output_videos_directory_url: '/uploads/output_videos'
    python_script_path: '%kernel.project_dir%/football_analysis-master/main.py'

    recaptcha_site_key: '%env(RECAPTCHA_SITE_KEY)%'
    recaptcha_secret_key: '%env(RECAPTCHA_SECRET_KEY)%'
    google_client_id: '%env(GOOGLE_ID)%'
    google_client_secret: '%env(GOOGLE_SECRET)%'
    app.base_url: 'http://127.0.0.1:8000'
    app.news_api_key: '2a65b6315ab7460f97ac49687599263d'
    slack.webhook_url: '%env(SLACK_WEBHOOK_URL)%'
    api_football_api_key: '%env(API_FOOTBALL_API_KEY)%'

    roboflow_api_key: '%env(ROBOFLOW_API_KEY)%'
    roboflow_inference_url: '%env(ROBOFLOW_INFERENCE_URL)%'


    sponsor_pictures_directory: '%kernel.project_dir%/public/uploads/sponsor_pictures'
    twilio_account_sid: '%env(TWILIO_ACCOUNT_SID)%'
    twilio_auth_token: '%env(TWILIO_AUTH_TOKEN)%'
    twilio_to_number: '%env(TWILIO_TO_NUMBER)%'
    twilio_from_number: '%env(TWILIO_FROM_NUMBER)%'
    parameters:
    stripe_public_key: '%env(STRIPE_KEY)%'
    stripe_secret_key: '%env(STRIPE_SECRET)%'
     # Remplacez par votre URL
services:
    
        
    Stripe\StripeClient:
        arguments:
            - '%env(STRIPE_SECRET_KEY)%'
    # Configure KnpSnappyPdf service with the binary path from environment variable
    Knp\Snappy\Pdf:
        arguments:
            $binary: '%env(WKHTMLTOPDF_PATH)%'

    # AppExtension for Twig
    App\Twig\AppExtension:
        tags: ['twig.extension']

    # Default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $botToken: '%env(SLACK_BOT_TOKEN)%'
            $defaultChannel: '#logistique'
            $roboflowApiKey: '%roboflow_api_key%'
            $roboflowInferenceUrl: '%roboflow_inference_url%'
    # Make classes in src/ available to be used as services
    # This creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Add more service definitions when explicit configuration is needed
    # Please note that last definitions always *replace* previous ones


  
    App\Service\GeocodingService:
        arguments:
            $apiKey: '%app.api_ninja_key%'

    App\Service\GoogleCalendarService:
        arguments:
            $params: '@parameter_bag'
            $logger: '@logger'

    App\Service\EventIdStorage:
        arguments:
            $params: '@parameter_bag'
            $logger: '@logger'



     # Explicitly configure ScheduleController to inject both $entityManager and $newsApiKey
    App\Controller\ScheduleController:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
            $newsApiKey: '%app.news_api_key%'

    App\Validator\NoScheduleOverlapValidator:
        tags: ['validator.constraint_validator']
        arguments:
            $scheduleRepository: '@App\Repository\ScheduleRepository'
    App\EventListener\JsonExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
            
    App\Service\RoboflowService:
        arguments:
            $httpClient: '@http_client'
    
    App\Controller\GeminiController:
        arguments:
            $geminiApiKey: '%env(GEMINI_API_KEY)%'