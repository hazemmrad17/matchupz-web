# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    profile_pictures_directory: '%kernel.project_dir%/public/uploads/profile_pictures'
    club_photos_directory: '%kernel.project_dir%/public/uploads/club_photos'
    photos_directory: '%kernel.project_dir%/public/uploads/photos'
<<<<<<< HEAD
    app.api_ninja_key: '%env(API_NINJA_KEY)%'  # Added for GeocodingService
    google_credentials_path: '%kernel.project_dir%/config/secrets/google_credentials.json'
    google_token_path: '%kernel.project_dir%/config/secrets/google_token.json'
    google_calendar_id: 'primary'
    event_id_storage_path: '%kernel.project_dir%/var/event_ids.json'
services:

services:
    Knp\Snappy\Pdf:
        arguments:
            $binary: '%env(WKHTMLTOPDF_PATH)%'

    App\Twig\AppExtension:
        tags: ['twig.extension']

    # default configuration for services in *this* file
=======
    app.news_api_key: '2a65b6315ab7460f97ac49687599263d'

services:
    # Default configuration for services in *this* file
>>>>>>> match
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

<<<<<<< HEAD
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
=======
    # Makes classes in src/ available to be used as services
    # This creates a service per class whose id is the fully-qualified class name
>>>>>>> match
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

<<<<<<< HEAD
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\GeocodingService:
        arguments:
            $apiKey: '%app.api_ninja_key%'

    App\Service\GoogleCalendarService:
        arguments:
            $params: '@parameter_bag'
            $logger: '@logger'

    App\Service\EventIdStorage:
        arguments:
            $params: '@parameter_bag'
            $logger: '@logger'
=======
    # Explicitly configure ScheduleController to inject both $entityManager and $newsApiKey
    App\Controller\ScheduleController:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
            $newsApiKey: '%app.news_api_key%'

    App\Validator\NoScheduleOverlapValidator:
        tags: ['validator.constraint_validator']
        arguments:
            $scheduleRepository: '@App\Repository\ScheduleRepository'
>>>>>>> match
