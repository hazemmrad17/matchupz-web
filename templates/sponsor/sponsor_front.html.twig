{% extends 'baseM.html.twig' %}

{% block title %}Sponsors{% endblock %}

{% block body %}
<style>
    .sponsor-header {
        background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), 
                    url("{{ asset('assets/img/sponsor-bg.jpg') }}");
        background-size: cover;
        background-position: center;
        padding: 6rem 0;
        color: white;
        text-align: center;
    }

    .sponsor-title {
        font-size: 2.2rem;
        font-weight: bold;
        text-align: center;
        margin-bottom: 3rem;
        font-family: 'Georgia', serif;
        color: #333;
        position: relative;
    }

    .sponsor-title::after {
        content: '';
        width: 60px;
        height: 4px;
        background-color: #007bff;
        display: block;
        margin: 0.5rem auto 0;
        border-radius: 2px;
    }

    .flip-card {
        background-color: transparent;
        width: 100%;
        height: 340px;
        perspective: 1000px;
        position: relative;
    }

    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        transition: transform 0.8s;
        transform-style: preserve-3d;
    }

    .flip-card.flipped .flip-card-inner {
        transform: rotateY(180deg);
    }

    .flip-card-front, .flip-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        border-radius: 15px;
        backface-visibility: hidden;
        top: 0;
        left: 0;
    }

    .flip-card-front {
        z-index: 2;
    }

    .flip-card-back {
        background: #f7f7f7;
        transform: rotateY(180deg);
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1rem;
        font-size: 1rem;
        text-align: center;
    }

    .sponsor-card {
        border-radius: 15px;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        height: 100%;
        overflow: hidden;
        position: relative;
        z-index: 2;
    }

    .sponsor-card:hover {
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    }

    .sponsor-content {
        padding: 1rem;
    }

    .sponsor-content .h5 {
        font-size: 1.05rem;
    }

    .sponsor-border-gold {
        border: 3px solid #FFD700;
    }

    .sponsor-border-silver {
        border: 3px solid #C0C0C0;
    }

    .sponsor-border-bronze {
        border: 3px solid #CD7F32;
    }

    .floating-stars {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 1;
    }

    .floating-stars span {
        position: absolute;
        color: #FFD700;
        font-size: 1.2rem;
        opacity: 0.9;
        text-shadow: 0 0 8px rgba(255, 215, 0, 0.8);
        animation: floatStar 6s infinite ease-in-out;
    }

    .floating-stars span:nth-child(1) { top: 20%; left: 25%; animation-delay: 0s; }
    .floating-stars span:nth-child(2) { top: 60%; left: 70%; animation-delay: 1s; }
    .floating-stars span:nth-child(3) { top: 75%; left: 15%; animation-delay: 2s; }
    .floating-stars span:nth-child(4) { top: 40%; left: 80%; animation-delay: 0.5s; }

    @keyframes floatStar {
        0%   { transform: translateY(0) scale(1);   opacity: 0.8; }
        50%  { transform: translateY(-20px) scale(1.3); opacity: 1; }
        100% { transform: translateY(0) scale(1);   opacity: 0.8; }
    }

    #card-element {
        padding: 12px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background: #fff;
        margin-bottom: 10px;
    }

    .btn-success {
        width: 100%;
        padding: 10px;
        font-size: 0.9rem;
    }

    .btn-success:disabled {
        background-color: #6c757d;
        border-color: #6c757d;
        cursor: not-allowed;
    }

    .mb-3 {
        margin-bottom: 0.75rem !important;
    }

    .form-label {
        font-size: 0.9rem;
        margin-bottom: 0.25rem;
    }

    .form-control, .form-select {
        font-size: 0.9rem;
        padding: 8px;
    }

    .flip-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: rgba(0, 123, 255, 0.8);
        color: white;
        border: none;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 3;
        font-size: 0.9rem;
    }

    .flip-card:hover .flip-btn,
    .flip-card.touched .flip-btn {
        opacity: 1;
    }

    .flip-btn:hover {
        background-color: rgba(0, 123, 255, 1);
    }
</style>

<div class="container-fluid bg-breadcrumb">
    <div class="container text-center py-5" style="max-width: 900px;">
        <h4 class="text-white display-4 mb-4 wow fadeInDown" data-wow-delay="0.1s">Nos Sponsors</h4>
        <ol class="breadcrumb d-flex justify-content-center mb-0 wow fadeInDown" data-wow-delay="0.3s">
        </ol>    
    </div>
</div>

<div class="container py-5">
    <div class="row">
        {% for sponsor in sponsors %}
            {% set pack = sponsor.pack|lower %}
            <div class="col-md-6 col-lg-4 mb-4 wow fadeInUp" data-wow-delay="{{ 0.2 + loop.index0 * 0.2 }}s">
                <div class="flip-card" data-id="flip-{{ sponsor.Id_sponsor }}">
                    <button class="flip-btn" title="Flip Card">
                        <i class="fa fa-sync-alt"></i>
                    </button>
                    <div class="flip-card-inner">
                        <div class="flip-card-front sponsor-card 
                            {% if pack == 'gold' %}sponsor-border-gold
                            {% elseif pack == 'silver' %}sponsor-border-silver
                            {% elseif pack == 'bronze' %}sponsor-border-bronze
                            {% endif %}">

                            {% if pack == 'gold' %}
                                <div class="floating-stars">
                                    <span>★</span>
                                    <span>★</span>
                                    <span>★</span>
                                    <span>★</span>
                                </div>
                            {% endif %}

                            <div class="sponsor-content">
                                <div class="blog-comment d-flex justify-content-between py-1 px-2 mb-2">
                                    <div class="small">
                                        <span class="fa fa-user text-primary me-2"></span> {{ sponsor.nom }}
                                    </div>
                                    <div class="small">
                                        <span class="fa fa-box text-primary me-2"></span> {{ sponsor.pack }}
                                    </div>
                                </div>

                                <div class="d-flex align-items-center mb-2">
                                    <i class="fa fa-handshake fa-lg text-primary me-2"></i>
                                    <a href="#" class="h5 d-inline-block mb-0">{{ sponsor.nom }}</a>
                                </div>

                                <p class="mb-2" style="font-size: 0.9rem;"><strong>Contact:</strong> {{ sponsor.contact }}</p>

                                <!-- Payment Form -->
                                <form id="checkout-form-{{ sponsor.Id_sponsor }}" method="post" action="{{ path('sponsor_stripe_charge', {'id': sponsor.Id_sponsor}) }}">
                                    <input type="hidden" name="stripeToken" id="stripe-token-id-{{ sponsor.Id_sponsor }}">
                                    <input type="hidden" name="_token" value="{{ csrf_token('stripe_payment_' ~ sponsor.Id_sponsor) }}">
                                    <input type="hidden" name="customerName" value="{{ sponsor.nom }}">

                                    <!-- Contract Selection -->
                                    <div class="mb-3">
                                        <label for="contract-{{ sponsor.Id_sponsor }}" class="form-label">Sélectionner un Contrat</label>
                                        <select id="contract-{{ sponsor.Id_sponsor }}" name="contractId" class="form-select" required>
                                            <option value="" disabled selected>Choisir un contrat</option>
                                            {% for contract in sponsor.contrats %}
                                                <option value="{{ contract.Id_Contrat }}">{{ contract.Titre }} ({{ contract.Montant|number_format(2, '.', ',') }} $)</option>
                                            {% endfor %}
                                        </select>
                                    </div>

                                    <!-- Card Element -->
                                    <label for="card-element-{{ sponsor.Id_sponsor }}" class="form-label">Détails de la Carte</label>
                                    <div id="card-element-{{ sponsor.Id_sponsor }}" class="form-control"></div>

                                    <!-- Pay Button -->
                                    <button 
                                        id="pay-btn-{{ sponsor.Id_sponsor }}"
                                        class="btn btn-success mt-2"
                                        type="button"
                                        onclick="createToken({{ sponsor.Id_sponsor }})"
                                        {% if not sponsor.contrats|length %}disabled{% endif %}
                                    >
                                        <i class="fa fa-credit-card me-1"></i> Payer
                                    </button>
                                </form>
                            </div>
                        </div>

                        <div class="flip-card-back 
                            {% if pack == 'gold' %}sponsor-border-gold
                            {% elseif pack == 'silver' %}sponsor-border-silver
                            {% elseif pack == 'bronze' %}sponsor-border-bronze
                            {% endif %}">
                            <p style="font-size: 0.95rem;">Merci à {{ sponsor.nom }} pour leur soutien précieux en tant que sponsor {{ sponsor.pack|capitalize }} !</p>
                        </div>
                    </div>
                </div>
            </div>
        {% else %}
            <div class="text-center">
                <p>Aucun sponsor trouvé.</p>
            </div>
        {% endfor %}
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/wow/1.1.2/wow.min.js"></script>
<script src="https://js.stripe.com/v3/"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const stripe = Stripe("{{ stripe_public_key }}");
        const elements = stripe.elements();

        // Object to store card elements for each sponsor
        const cardElements = {};

        // Initialize Stripe card elements for each sponsor
        {% for sponsor in sponsors %}
            try {
                console.log(`Initializing card element for sponsor ${ {{ sponsor.Id_sponsor }} }`);
                const cardElement = elements.create('card', {
                    style: {
                        base: {
                            fontSize: '14px',
                            color: '#32325d',
                            '::placeholder': { color: '#aab7c4' },
                        },
                        invalid: { color: '#fa755a' },
                    },
                });
                const cardElementContainer = document.getElementById('card-element-{{ sponsor.Id_sponsor }}');
                if (!cardElementContainer) {
                    throw new Error(`Card element container not found for sponsor ${ {{ sponsor.Id_sponsor }} }`);
                }
                cardElement.mount('#card-element-{{ sponsor.Id_sponsor }}');
                cardElements[{{ sponsor.Id_sponsor }}] = cardElement;
                console.log(`Card element mounted for sponsor ${ {{ sponsor.Id_sponsor }} }`);
            } catch (error) {
                console.error(`Error initializing card element for sponsor ${ {{ sponsor.Id_sponsor }} }:`, error.message);
            }
        {% endfor %}

        // Function to create token and submit form
        window.createToken = function(sponsorId) {
            try {
                console.log(`Creating token for sponsor ${sponsorId}`);
                const payBtn = document.getElementById(`pay-btn-${sponsorId}`);
                const form = document.getElementById(`checkout-form-${sponsorId}`);
                const contractSelect = document.getElementById(`contract-${sponsorId}`);

                if (!payBtn || !form || !contractSelect) {
                    throw new Error(`Form elements not found for sponsor ${sponsorId}`);
                }

                if (!contractSelect.value) {
                    alert('Veuillez sélectionner un contrat.');
                    return;
                }

                const cardElement = cardElements[sponsorId];
                if (!cardElement) {
                    throw new Error(`Card element not found for sponsor ${sponsorId}`);
                }

                payBtn.disabled = true;

                stripe.createToken(cardElement).then(function(result) {
                    if (result.error) {
                        payBtn.disabled = false;
                        alert(result.error.message);
                    } else if (result.token) {
                        document.getElementById(`stripe-token-id-${sponsorId}`).value = result.token.id;
                        form.submit();
                    }
                }).catch(function(error) {
                    payBtn.disabled = false;
                    console.error(`Error creating token for sponsor ${sponsorId}:`, error.message);
                    alert('Une erreur est survenue : ' + error.message);
                });
            } catch (error) {
                console.error(`Error in createToken for sponsor ${sponsorId}:`, error.message);
                alert('Une erreur est survenue lors de la soumission du paiement.');
            }
        };

        // Handle card flipping with flip button
        document.querySelectorAll('.flip-card').forEach(card => {
            const flipBtn = card.querySelector('.flip-btn');

            card.addEventListener('mouseenter', () => {
                flipBtn.style.opacity = '1';
            });
            card.addEventListener('mouseleave', () => {
                if (!card.classList.contains('flipped')) {
                    flipBtn.style.opacity = '0';
                }
            });

            card.addEventListener('touchstart', () => {
                card.classList.add('touched');
            });

            flipBtn.addEventListener('click', () => {
                card.classList.toggle('flipped');
                if (card.classList.contains('flipped')) {
                    flipBtn.style.opacity = '1';
                }
            });
        });

        // Initialize WOW.js for animations
        new WOW().init();
    });
</script>
{% endblock %}