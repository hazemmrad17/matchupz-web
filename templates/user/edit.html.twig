{% extends 'base.html.twig' %}

{% block title %}Modifier Utilisateur{% endblock %}

{% block searchbar %}
    {% include 'searchbar.html.twig' %}
{% endblock %}

{% block content %}
    <div class="content-wrapper">
        <div class="container-xxl flex-grow-1 container-p-y">
            <h4 class="fw-bold py-3 mb-4">
                <span class="text-muted fw-light">Utilisateurs /</span> Modifier Utilisateur
            </h4>

            <div class="col-xl">
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Modifier l'Utilisateur</h5>
                        <small class="text-muted float-end">Mettre à jour les détails</small>
                    </div>
                    <div class="card-body">
                        <!-- Toast container -->
                        <div class="position-fixed top-0 end-0 p-3" style="z-index: 1050;" id="toast-container"></div>

                        {# Inclusion du formulaire sans modifier le FormView #}
                        {{ include('user/_form.html.twig', {
                            'button_label': 'Mettre à jour',
                            'form': form
                        }) }}
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('userForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const toastContainer = document.getElementById('toast-container');
            toastContainer.innerHTML = ''; // Clear previous toasts

            // Get form field values
            const nom = document.getElementById('user_nom')?.value.trim() || '';
            const prenom = document.getElementById('user_prenom')?.value.trim() || '';
            const email = document.getElementById('user_email')?.value.trim() || '';
            const password = document.getElementById('user_password')?.value || '';
            const telephone = document.getElementById('user_num_telephone')?.value.trim() || '';
            const dateNaissance = document.getElementById('user_date_de_naissance')?.value || '';
            const genre = document.querySelector('input[name="user[genre]"]:checked')?.value || '';
            const role = document.getElementById('user_role')?.value || '';
            const image = document.getElementById('user_image')?.files[0];

            // Validation des champs obligatoires
            if (!nom) {
                addToast('Erreur Nom', 'Veuillez entrer le nom.');
            } else if (!/^[a-zA-Z\s-]+$/.test(nom)) {
                addToast('Erreur Nom', 'Le nom ne doit contenir que des lettres.');
            }

            if (!prenom) {
                addToast('Erreur Prénom', 'Veuillez entrer le prénom.');
            } else if (!/^[a-zA-Z\s-]+$/.test(prenom)) {
                addToast('Erreur Prénom', 'Le prénom ne doit contenir que des lettres.');
            }

            if (!email) {
                addToast('Erreur Email', 'Veuillez entrer un email.');
            } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                addToast('Erreur Email', 'Format email invalide (ex: nom@gmail.com).');
            }

            if (password && password.length < 6) {
                addToast('Erreur Mot de passe', 'Le mot de passe doit contenir au moins 6 caractères.');
            }

            if (telephone) {
                if (!/^\d{8}$/.test(telephone)) {
                    addToast('Erreur Téléphone', 'Le téléphone doit contenir exactement 8 chiffres.');
                }
            }

            if (dateNaissance) {
                const birthDate = new Date(dateNaissance);
                const today = new Date();
                const minAgeDate = new Date();
                minAgeDate.setFullYear(today.getFullYear() - 18);

                if (birthDate > today) {
                    addToast('Erreur Date', 'La date ne peut pas être dans le futur.');
                } else if (birthDate > minAgeDate) {
                    addToast('Erreur Date', 'L\'utilisateur doit avoir au moins 18 ans.');
                }
            }

            if (!role) {
                addToast('Erreur Rôle', 'Veuillez sélectionner un rôle.');
            }

            if (image) {
                const validTypes = ['image/jpeg', 'image/png'];
                if (!validTypes.includes(image.type)) {
                    addToast('Erreur Image', 'L\'image doit être au format JPG ou PNG.');
                }
                if (image.size > 2 * 1024 * 1024) {
                    addToast('Erreur Image', 'L\'image ne doit pas dépasser 2Mo.');
                }
            }

            // Submit if no errors
            if (toastContainer.children.length === 0) {
                this.submit();
            } else {
                const toastElements = toastContainer.querySelectorAll('.toast');
                toastElements.forEach(toast => new bootstrap.Toast(toast, { autohide: true, delay: 5000 }).show());
            }
        });

        // Fonction pour ajouter un toast
        function addToast(title, message) {
            const toastContainer = document.getElementById('toast-container');
            const toastId = 'toast-' + Date.now();
            const toastHTML = `
                <div id="${toastId}" class="bs-toast toast fade bg-danger" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                        <i class="bx bx-bell me-2"></i>
                        <div class="me-auto fw-semibold">${title}</div>
                        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body">${message}</div>
                </div>
            `;
            toastContainer.innerHTML += toastHTML;
        }
    </script>
{% endblock %}