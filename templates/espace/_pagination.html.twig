<script type="text/javascript">
        var gk_isXlsx = false;
        var gk_xlsxFileLookup = {};
        var gk_fileData = {};
        function filledCell(cell) {
          return cell !== '' && cell != null;
        }
        function loadFileData(filename) {
        if (gk_isXlsx && gk_xlsxFileLookup[filename]) {
            try {
                var workbook = XLSX.read(gk_fileData[filename], { type: 'base64' });
                var firstSheetName = workbook.SheetNames[0];
                var worksheet = workbook.Sheets[firstSheetName];

                // Convert sheet to JSON to filter blank rows
                var jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1, blankrows: false, defval: '' });
                // Filter out blank rows (rows where all cells are empty, null, or undefined)
                var filteredData = jsonData.filter(row => row.some(filledCell));

                // Heuristic to find the header row by ignoring rows with fewer filled cells than the next row
                var headerRowIndex = filteredData.findIndex((row, index) =>
                  row.filter(filledCell).length >= filteredData[index + 1]?.filter(filledCell).length
                );
                // Fallback
                if (headerRowIndex === -1 || headerRowIndex > 25) {
                  headerRowIndex = 0;
                }

                // Convert filtered JSON back to CSV
                var csv = XLSX.utils.aoa_to_sheet(filteredData.slice(headerRowIndex)); // Create a new sheet from filtered array of arrays
                csv = XLSX.utils.sheet_to_csv(csv, { header: 1 });
                return csv;
            } catch (e) {
                console.error(e);
                return "";
            }
        }
        return gk_fileData[filename] || "";
        }
        </script><nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item {{ espaces.currentPageNumber == 1 ? 'disabled' : '' }}">
            <a class="page-link" href="{{ path('espace_index', {'page': espaces.currentPageNumber - 1, 'search': searchTerm|default('')}) }}" aria-label="Previous">
                <span aria-hidden="true">«</span>
            </a>
        </li>
        
        {% for i in 1..espaces.pageCount %}
            <li class="page-item {{ espaces.currentPageNumber == i ? 'active' : '' }}">
                <a class="page-link" href="{{ path('espace_index', {'page': i, 'search': searchTerm|default('')}) }}">{{ i }}</a>
            </li>
        {% endfor %}
        
        <li class="page-item {{ espaces.currentPageNumber == espaces.pageCount ? 'disabled' : '' }}">
            <a class="page-link" href="{{ path('espace_index', {'page': espaces.currentPageNumber + 1, 'search': searchTerm|default('')}) }}" aria-label="Next">
                <span aria-hidden="true">»</span>
            </a>
        </li>
    </ul>
</nav>