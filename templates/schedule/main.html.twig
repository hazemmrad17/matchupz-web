{% extends 'base.html.twig' %}
{% block searchbar %}
    {% include 'searchbar.html.twig' %}
{% endblock %}

{% block title %}Liste des planning{% endblock %}

{% block content %}
    <style>
        .row-ongoing {
            animation: greenFlow 3s ease-in-out infinite;
            background: linear-gradient(270deg, #b0f2b6, #72c72b, #b0f2b6);
            background-size: 400% 100%;
            transition: background 1s ease-in-out;
        }

        @keyframes greenFlow {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .table-scrollable {
            max-height: 265px;
            overflow-y: auto;
        }
    </style>

    <div class="content-wrapper">
        <div class="container-xxl flex-grow-1 container-p-y">
            <div class="card">
                <h5 class="card-header d-flex justify-content-between align-items-center">
                    Liste des plannings
                <div>
                    <a href="{{ path('schedule_new') }}" class="btn btn-primary">Ajouter un planning</a>
                </h5>
                </a>
                <div class="card-body">
                    <div class="mb-4">
                        <div class="input-group">
                            <span class="input-group-text"><i class="bx bx-search"></i></span>
                            <input type="text" id="searchInput" class="form-control" placeholder="Rechercher par compétiteurs ou lieu sportif..." value="">
                        </div>
                    </div>

                    <div class="table-responsive text-nowrap table-scrollable">
                        <table class="table" id="schedulesTable">
                            <thead>
                                <tr>
                                    <th>Date du Match</th>
                                    <th>Heure de Début</th>
                                    <th>Heure de Fin</th>
                                    <th>Match</th>
                                    <th>Lieu sportif</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody class="table-border-bottom-0" id="schedulesTableBody">
                                {% for schedule in schedules %}
                                    {% set now = "now"|date("U") %}
                                    {% set dateMatch = schedule.dateMatch|date("U") %}
                                    {% set startTime = schedule.dateMatch|date_modify(schedule.startTime|date("H:i:s"))|date("U") %}
                                    {% set endTime = schedule.dateMatch|date_modify(schedule.endTime|date("H:i:s"))|date("U") %}

                                    {% set isOngoing = (now >= startTime and now <= endTime) %}
                                    {% set isPast = (now > endTime or now > dateMatch) %}

                                    <tr class="{% if isOngoing %}row-ongoing{% elseif isPast %}table-danger{% else %}table-default{% endif %}">
                                        <td><i class="fab fa-sketch fa-lg text-warning me-3"></i><strong>{{ schedule.dateMatch|date('m-d-Y') }}</strong></td>
                                        <td>{{ schedule.startTime|date('H:i') }}</td>
                                        <td>{{ schedule.endTime|date('H:i') }}</td>
                                        <td><i class="fab fa-sketch fa-lg text-warning me-3"></i><strong>{{ schedule.matchEntity ? schedule.matchEntity.c1 ~ ' vs ' ~ schedule.matchEntity.c2 : 'N/A' }}</strong></td>
                                        <td>{{ schedule.espaceSportif ? schedule.espaceSportif.nom_espace : 'N/A' }}</td>
                                        <td>
                                            <div class="dropdown">
                                                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                                    <i class="bx bx-dots-vertical-rounded"></i>
                                                </button>
                                                <div class="dropdown-menu">
                                                    <a class="dropdown-item" href="{{ path('schedule_show', {'idSchedule': schedule.idSchedule}) }}">
                                                        <i class="bx bx-show me-1"></i> Voir
                                                    </a>
                                                    <a class="dropdown-item" href="{{ path('schedule_edit', {'idSchedule': schedule.idSchedule}) }}">
                                                        <i class="bx bx-edit-alt me-1"></i> Modifier
                                                    </a>
                                                    <form method="post" action="{{ path('schedule_delete', {'idSchedule': schedule.idSchedule}) }}" style="display:inline;" onsubmit="return confirm('Confirmer la suppression?');">
                                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ schedule.idSchedule) }}">
                                                        <button class="dropdown-item" type="submit">
                                                            <i class="bx bx-trash me-1"></i> Supprimer
                                                        </button>
                                                    </form>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                {% else %}
                                    <tr><td colspan="6" class="text-center">Aucun schedule trouvé</td></tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchInput');
            const schedulesTableBody = document.getElementById('schedulesTableBody');

            function formatTime(timeString) {
                return timeString.substring(0, 5);
            }

            function getRowClass(dateMatch, startTime, endTime) {
                const now = Math.floor(Date.now() / 1000);
                const dateMatchTimestamp = Math.floor(new Date(dateMatch).getTime() / 1000);
                const startDateTime = new Date(`${dateMatch}T${startTime}`).getTime() / 1000;
                const endDateTime = new Date(`${dateMatch}T${endTime}`).getTime() / 1000;
                const isOngoing = now >= startDateTime && now <= endDateTime;
                const isPast = now > endDateTime || now > dateMatchTimestamp;
                if (isOngoing) return 'row-ongoing';
                if (isPast) return 'table-danger';
                return 'table-default';
            }

            function debounce(func, wait) {
                let timeout;
                return function (...args) {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => func.apply(this, args), wait);
                };
            }

            const performSearch = debounce(async function (query) {
                try {
                    const response = await fetch(`{{ path('schedule_search') }}?q=${encodeURIComponent(query)}`);
                    if (!response.ok) throw new Error('Network response was not ok');

                    const schedules = await response.json();
                    schedulesTableBody.innerHTML = '';

                    if (schedules.length === 0) {
                        schedulesTableBody.innerHTML = `<tr><td colspan="6" class="text-center">Aucun schedule trouvé</td></tr>`;
                        return;
                    }

                    schedules.forEach(schedule => {
                        console.log('Processing schedule:', schedule);
                        console.log('CSRF Token for schedule:', schedule.csrfToken);

                        const rowClass = getRowClass(schedule.dateMatch, schedule.startTime, schedule.endTime);
                        const row = document.createElement('tr');
                        row.className = rowClass;

                        const espaceSportifName = schedule.espaceSportif && schedule.espaceSportif.nom_espace ? schedule.espaceSportif.nom_espace : 'N/A';
                        const baseUrl = '/schedule';
                        const showUrl = `${baseUrl}/${schedule.idSchedule}`;
                        const editUrl = `${baseUrl}/${schedule.idSchedule}/edit`;
                        const deleteUrl = `${baseUrl}/${schedule.idSchedule}/delete`;

                        row.innerHTML = `
                            <td><i class="fab fa-sketch fa-lg text-warning me-3"></i><strong>${schedule.dateMatch}</strong></td>
                            <td>${formatTime(schedule.startTime)}</td>
                            <td>${formatTime(schedule.endTime)}</td>
                            <td><i class="fab fa-sketch fa-lg text-warning me-3"></i><strong>${schedule.match ? schedule.match.c1 + ' vs ' + schedule.match.c2 : 'N/A'}</strong></td>
                            <td>${espaceSportifName}</td>
                            <td>
                                <div class="dropdown">
                                    <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                        <i class="bx bx-dots-vertical-rounded"></i>
                                    </button>
                                    <div class="dropdown-menu">
                                        <a class="dropdown-item" href="${showUrl}">
                                            <i class="bx bx-show me-1"></i> Voir
                                        </a>
                                        <a class="dropdown-item" href="${editUrl}">
                                            <i class="bx bx-edit-alt me-1"></i> Modifier
                                        </a>
                                        <form method="post" action="${deleteUrl}" style="display:inline;" onsubmit="return confirm('Confirmer la suppression?');">
                                            <input type="hidden" name="_token" value="${schedule.csrfToken}">
                                            <button class="dropdown-item" type="submit">
                                                <i class="bx bx-trash me-1"></i> Supprimer
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </td>
                        `;
                        schedulesTableBody.appendChild(row);
                    });
                } catch (error) {
                    console.error('Erreur recherche :', error);
                    schedulesTableBody.innerHTML = `<tr><td colspan="6" class="text-center">Erreur lors de la recherche</td></tr>`;
                }
            }, 300);

            searchInput.addEventListener('input', function () {
                performSearch(this.value.trim());
            });

            performSearch('');
        });
    </script>
{% endblock %}