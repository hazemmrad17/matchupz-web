{% extends 'base.html.twig' %}

{% block title %}Object Detection{% endblock %}

{% block body %}
<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">Object Detection</h4>

    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <h5 class="card-header">Upload Image</h5>
                <div class="card-body">
                    <form id="uploadForm" class="dropzone">
                        <div class="dz-message needsclick">
                            Drop files here or click to upload<br>
                            <small class="text-muted">(Supported formats: JPG, PNG)</small>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <h5 class="card-header">Original Image</h5>
                <div class="card-body">
                    <div id="originalImage"></div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card mb-4">
                <h5 class="card-header">Detection Results</h5>
                <div class="card-body">
                    <div id="detectionResults"></div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>
<link rel="stylesheet" href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" type="text/css" />

<script>
Dropzone.autoDiscover = false;

document.addEventListener('DOMContentLoaded', function() {
    const uploadForm = new Dropzone("#uploadForm", {
        url: "{{ path('app_detection_process') }}",
        acceptedFiles: "image/*",
        maxFiles: 1,
        init: function() {
            this.on("success", function(file, response) {
                if (response.success) {
                    // Display original image
                    const originalImage = document.getElementById('originalImage');
                    originalImage.innerHTML = `<img src="${URL.createObjectURL(file)}" class="img-fluid" alt="Original Image">`;

                    // Display detection results
                    const detectionResults = document.getElementById('detectionResults');
                    let resultsHtml = '<div class="table-responsive"><table class="table table-bordered">';
                    resultsHtml += '<thead><tr><th>Class</th><th>Confidence</th><th>Location</th></tr></thead><tbody>';
                    
                    response.predictions.forEach(pred => {
                        resultsHtml += `
                            <tr>
                                <td>${pred.class}</td>
                                <td>${(pred.confidence * 100).toFixed(2)}%</td>
                                <td>x: ${pred.x}, y: ${pred.y}<br>w: ${pred.width}, h: ${pred.height}</td>
                            </tr>
                        `;
                    });
                    
                    resultsHtml += '</tbody></table></div>';
                    detectionResults.innerHTML = resultsHtml;
                } else {
                    alert('Error processing image: ' + response.error);
                }
            });

            this.on("error", function(file, errorMessage) {
                alert('Error uploading file: ' + errorMessage);
            });
        }
    });
});
</script>
{% endblock %} 